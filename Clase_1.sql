use jarvis;

-- SE CREA UNA TABLA
CREATE TABLE FVB_CLIENTES (ID INT AUTO_INCREMENT AUTO_INCREMENT KEY, NOMBRE varchar(25), PAIS varchar(25), CATEGORIA varchar(30), NUM_VENTA int);

-- MODIFICANDO LA TABLA  AGREGANDO COLUMNA TELEFONO
ALTER TABLE FVB_CLIENTES ADD TELEFONO INT;

-- MODIFICANDO LA TABALA ELIMINANDO COLUMNA NUM_VENTAS
ALTER TABLE FVB_CLIENTES DROP COLUMN NUM_VENTA;

-- MODIFICANDO LA COLUMNA TELEFONO 
ALTER TABLE FVB_CLIENTES MODIFY COLUMN TELEFONO VARCHAR(15);

-- MODIFICANDO LA TABLA AGREGANDO LA COLUMNA BORRADO EN TRUE O FALSE
ALTER TABLE FVB_CLIENTES ADD BORRADO BOOLEAN;

-- COMANDO PARA ELIMINAR TABLA
-- DROP TABLE FVB_CLIENTES;



-- #################################################################
-- AGREGANDO DATOS
INSERT INTO FVB_CLIENTES (NOMBRE, PAIS, CATEGORIA, TELEFONO, BORRADO) VALUES ('Francisco Valdenegro','CHILE','PREMIUM','+56965895772',FALSE);
INSERT INTO FVB_CLIENTES (NOMBRE, PAIS, CATEGORIA, TELEFONO, BORRADO) VALUES ('Sebastian Retamal','CHILE','GOLDEN','+56912345678',FALSE);

-- ACTUALIZANDO LA TABLA CAMBIANDO TODOS LOS VALORES A TRUE
UPDATE FVB_CLIENTES SET BORRADO = FALSE;

-- ACTUALIZANDO TABLA CON CONDICION. (SET ES EL DATO QUE QUIERO MODIFICAR)
UPDATE FVB_CLIENTES SET BORRADO = TRUE WHERE NOMBRE LIKE '%SEBA%'

-- ACTUALIZANDO TABLA CON CONDICIONES VARIAS
UPDATE FVB_CLIENTES SET BORRADO = FALSE, PAIS = 'AUSTRALIA', CATEGORIA = 'BLACK' WHERE NOMBRE LIKE '%SEBA%'

-- CONSULTANDO TODOS LOS DATOS QUE TIENE LA TABLA FVB_CLIENTES
SELECT * FROM FVB_CLIENTES;

-- CONSULTANDO LOS DATOS CON CONDICIONES
SELECT * 
FROM FVB_CLIENTES 
WHERE NOMBRE = 'Sebastian Retamal';





-- #################################################################
-- REVISANDO LA TABLA CLIENTES
SELECT * FROM CLIENTES; 

-- MAXIMO 
SELECT MAX(NUM_VENTA) 
FROM CLIENTES;

-- CONUSLTA ANIDADA
SELECT *
FROM CLIENTES
WHERE NUM_VENTA = (
SELECT MAX(NUM_VENTA)
FROM CLIENTES
);

-- CONSULTA ANIDADA QUE SOLO MUESTRA LAS COLUMNAS QUE QUIERO
SELECT CATEGORIA, NOMBRE
FROM CLIENTES
WHERE NUM_VENTA = (
SELECT MAX(NUM_VENTA)
FROM CLIENTES
);


-- MINIMO
SELECT MIN(NUM_VENTA)
FROM CLIENTES; 

-- CONUSLTA ANIDADA
SELECT *
FROM CLIENTES
WHERE NUM_VENTA = (
SELECT MIN(NUM_VENTA)
FROM CLIENTES
);


-- COUNT
SELECT COUNT(*)
FROM CLIENTES;

-- CONTAR CUANTOS MINIMOS TENGO (COUNT CON SELECT ANIDADO)
SELECT COUNT(*) 
FROM CLIENTES
WHERE NUM_VENTA = (
SELECT MIN(NUM_VENTA)
FROM CLIENTES
);

-- COUNT CON CONDICION 
SELECT COUNT(*)
FROM CLIENTES
WHERE NUM_VENTA = 9;

SELECT COUNT(*)
FROM CLIENTES
WHERE NUM_VENTA >6;

-- COUNT CON CONDICION 
SELECT COUNT(*)
FROM CLIENTES
WHERE NUM_VENTA <>9;

-- PROMEDIO
SELECT AVG(NUM_VENTA)
FROM CLIENTES;

-- PROMEDIO DE LAS VENTAS MAYORES O IGUALES A 4
SELECT AVG(NUM_VENTA)
FROM CLIENTES
WHERE NUM_VENTA >=4;

-- ORDER BY ASC ES ASENDENTE Y DESC ES DESCENDENTE
SELECT * 
FROM CLIENTES
ORDER BY (NOMBRE) ASC;

-- OBTENIENDO EL NOMBRE DE COLUMNAS
DESCRIBE CLIENTES;

-- NO MOSTRAR LOS REPETIDOS DE ALGUNA COLUMNA
SELECT DISTINCT(PAIS)
FROM CLIENTES
WHERE PAIS LIKE 'C%';

-- NO MOSTRAR LOS REPETIDOS TERMINADOS CON A 
SELECT DISTINCT(PAIS)
FROM CLIENTES
WHERE PAIS LIKE '%A';

-- AND (AGREGANDO MAS CONDICIONES)
SELECT *
FROM CLIENTES
WHERE NUM_VENTA BETWEEN 5 AND 7
AND PAIS = 'CHINA';

-- ALIAS A COLUMNAS
SELECT DISTINCT(PAIS) AS CONTRIES
FROM CLIENTES 
WHERE PAIS LIKE '%A';

-- ALIAS PARA TABLAS
SELECT DISTINCT(CLI.PAIS)
FROM CLIENTES AS CLI
WHERE PAIS LIKE '%A';


